<?xml version="1.0" encoding="UTF-8"?>
 <!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="book_board">
	<!-- 최대 글번호 얻기 -->
	<select id="maxNumber" resultType="Integer">
		select max(book_no) from book_board
	</select>
	
	<!-- 답글 끼워넣을 위치 확보 -->
	<update id="reStep" parameterType="model.book.Book_boardDto">
		update book_board
		set book_step=book_step+1
		where book_group=#{book_group} and book_step>#{book_step}
	</update>
	
	<!-- 글쓰기, 답글쓰기 -->
	<insert id="insertBoard" parameterType="model.book.Book_boardDto">
		insert into book_board(mem_id, mem_nick, book_title, book_date, book_group, book_step, book_indent, book_content, book_ip, book_type, book_location, book_rating)
		values(#{mem_id}, #{mem_nick}, #{book_title}, NOW(), #{book_group}, #{book_step}, #{book_indent}, #{book_content}, #{book_ip}, #{book_type}, #{book_location}, #{book_rating})
	</insert>
	
	<!-- 이미지 저장 -->
	<insert id="insertImgs" parameterType="map">
		insert into book_imgs(book_no, img_title)
		values(#{book_no}, #{img_title})
	</insert>
	
	<!-- 이미지 보기 -->
	<select id="selectImgs" parameterType="int" resultType="String">
		select img_title
		from book_imgs
		where book_no=#{book_no}
	</select>
	
	<!-- 이미지 삭제 -->
	<delete id="deleteImgs" parameterType="int">
		delete from book_imgs
		where book_no=#{book_no}
	</delete>
	
	<!-- 글 수정시 이미지 삭제 -->
	<delete id="deleteDbImg" parameterType="String">
		delete from book_imgs
		where img_title=#{img_no}
	</delete>
	
	<!-- 글 갯수 -->
	<select id="selectCount" resultType="int">
		select count(*) from book_board
	</select>
	
	<!-- 각 카테고리 글 갯수 -->
	<select id="selectCountCategory" resultType="int">
		select count(*) from book_board where book_type=#{book_type}
	</select>
	
	<!-- 리스트 -->
	<select id="selectList" parameterType="java.util.HashMap" resultType="model.book.Book_boardDto">
		select * from book_board 
		order by book_group desc, book_step asc
		limit #{start},#{cnt}
	</select>
	
	<!-- 각 카테고리 글 리스트 -->
	<select id="selectListCategory" parameterType="java.util.HashMap" resultType="model.book.Book_boardDto">
		select * from book_board 
		where book_type=#{book_type} 
		order by book_group desc, book_step asc
		limit #{start},#{cnt}
	</select>
	
	<!-- 전체 리스트 검색 -->
	<select id="searchList" parameterType="map" resultType="model.book.Book_boardDto">
		select * from book_board 
		where ${searchType} like CONCAT('%',#{searchValue},'%')
		order by book_group desc, book_step asc
		limit #{start},#{cnt}
	</select>
	
	<!-- 각 카테고리 글 리스트  검색-->
	<select id="searchListCategory" parameterType="java.util.HashMap" resultType="model.book.Book_boardDto">
		select * from book_board 
		where book_type=#{book_type} and ${searchType} like CONCAT('%',#{searchValue},'%')
		order by book_group desc, book_step asc
		limit #{start},#{cnt}
	</select>
	
	<!-- 전체 검색 글 갯수 -->
	<select id="searchCount" parameterType="map" resultType="int">
		select count(*) from book_board
		where ${searchType} like CONCAT('%',#{searchValue},'%')
	</select>
	
	<!-- 각 카테고리 검색 글 갯수 -->
	<select id="searchCountCategory" parameterType="map" resultType="int">
		select count(*) from book_board
		where book_type=#{book_type} and ${searchType} like CONCAT('%',#{searchValue},'%')
	</select>
	
	<!-- 조횟수 -->
	<update id="readCount" parameterType="int">
		update book_board set book_readcount=book_readcount+1 
		where book_no=#{book_no}
	</update>
	
	<!-- 글내용보기, 글수정 -->
	<select id="contentBoard" parameterType="int" resultType="model.book.Book_boardDto">
		select * from book_board 
		where book_no=#{book_no}
	</select>
	
	<!-- DB글수정 -->
	<update id="updateBoard" parameterType="model.book.Book_boardDto">
		update book_board set
		book_title=#{book_title},
		book_content=#{book_content},
		book_type=#{book_type}
		where book_no=#{book_no}
	</update>
	
	<!-- 글 삭제 -->
	<delete id="deleteBoard" parameterType="int">
		delete from book_board where book_no=#{book_no} 
	</delete>
	
	
	<!-- 좋아요 기능=================================================================== -->
	
	<!-- 좋아요테이블에 좋아요 레코드 추가 -->
	<insert id="insertLike" parameterType="java.util.HashMap">
		insert into book_likes(mem_id, book_no, book_likeState) 
		values(#{mem_id},#{book_no},#{book_likeState})
	</insert>
	
	<!-- 좋아요 테이블에 좋아요 레코드 삭제 -->
	<insert id="deleteLike" parameterType="map">
		delete from book_likes
		where mem_id=#{mem_id} and book_no=#{book_no}
	</insert>
	
	<!-- 게시판에 like 업데이트 -->
	<update id="likeUpdateBoard" parameterType="map">
		update book_board
		set book_like=book_like+#{book_likeState}
		where book_no=#{book_no}
	</update>
	
	<!-- 게시판에 like취소 업데이트 -->
	<update id="likeCancelUpdate" parameterType="map">
		update book_board
		set book_like=book_like-#{book_likeState}
		where book_no=#{book_no}
	</update>
	
	<!-- likeCnt 업데이트 -->
	<update id="likeCntUpdate" parameterType="String">
		update book_board
		set book_like_cnt=book_like_cnt+1
		where book_no=#{book_no}
	</update>
	
	<!-- likeCnt 취소 업데이트 -->
	<update id="likeCntCancel" parameterType="String">
		update book_board
		set book_like_cnt=book_like_cnt-1
		where book_no=#{book_no}
	</update>
	
	<!-- dislikeCnt 업데이트 -->
	<update id="dislikeCntUpdate" parameterType="String">
		update book_board
		set book_dislike_cnt=book_dislike_cnt+1
		where book_no=#{book_no}
	</update>
	
	<!-- dislikeCnt 취소 업데이트 -->
	<update id="dislikeCntCancel" parameterType="String">
		update book_board
		set book_dislike_cnt=book_dislike_cnt-1
		where book_no=#{book_no}
	</update>
	
	<!-- 좋아요 갯수 -->
	<select id="likeSelect" parameterType="int" resultType="model.book.Book_boardDto">
		select book_like, book_like_cnt, book_dislike_cnt
		from book_board
		where book_no=#{book_no}
	</select>
	
	<!-- 해당 게시물에 대한 좋아요 상태 -->
	<select id="likeStateCheck" parameterType="map" resultType="String">
		select book_likeState
		from book_likes
		where mem_id=#{mem_id} and book_no=#{book_no}
	</select>
	
	
	<!--댓글 기능 ===================================================================================== -->
	<!-- 최대 댓글 번호 얻기 -->
	<select id="cmtMaxNumber" parameterType="int" resultType="int">
		select count(cmt_no) 
		from book_cmt 
		where book_no=#{book_no}
	</select>
	
	<!-- 대댓글 끼워넣을 위치 확보 -->
	<update id="cmtReStep" parameterType="model.book.Book_cmtDto">
		update book_cmt
		set cmt_step=cmt_step+1
		where cmt_group=#{cmt_group} and cmt_step>#{cmt_step}
	</update>
	
	<!-- 글쓰기, 답글쓰기 -->
	<insert id="insertCmt" parameterType="model.book.Book_cmtDto">
		insert into book_cmt(book_no, mem_id, mem_nick, cmt_date, cmt_group, cmt_step, cmt_indent, cmt_content, cmt_ip)
		values(#{book_no}, #{mem_id}, #{mem_nick}, NOW(), #{cmt_group}, #{cmt_step}, #{cmt_indent}, #{cmt_content}, #{cmt_ip})
	</insert>
	
	<!-- 리스트 -->
	<select id="cmtList" parameterType="map" resultType="model.book.Book_cmtDto">
		select * from book_cmt 
		where book_no=#{book_no}
		order by cmt_group desc, cmt_step asc
		limit #{start},#{cnt}
	</select>
	
	<!-- 댓글 아이디 조회 -->
	<select id="cmtIdSearch" parameterType="map" resultType="String">
		select mem_id
		from book_cmt
		where book_no=#{book_no} and cmt_no=#{cmt_no}
	</select>
	
	<!-- 댓글 삭제 -->
	<select id="deleteCmt" parameterType="map">
		delete from book_cmt
		where book_no=#{book_no} and cmt_no=#{cmt_no}
	</select>
	
	<!-- 게시글 댓글수 수정 -->
	<update id="updateBoardCmtCnt" parameterType="map">
		update book_board
		set book_cmt_cnt =book_cmt_cnt+#{countState}
		where book_no=#{book_no}
	</update>
</mapper>
<?xml version="1.0" encoding="UTF-8"?>
 <!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="book_board">
	<!-- 최대 글번호 얻기 -->
	<select id="maxNumber" resultType="Integer">
		select max(book_no) from book_board
	</select>
	
	<!-- 답글 끼워넣을 위치 확보 -->
	<update id="reStep" parameterType="model.book.Book_boardDto">
		update book_board
		set book_step=book_step+1
		where book_group=#{book_group} and book_step>#{book_step}
	</update>
	
	<!-- 글쓰기, 답글쓰기 -->
	<insert id="insertBoard" parameterType="model.book.Book_boardDto">
		insert into book_board(mem_id, mem_nick, book_title, book_date, book_group, book_step, book_indent, book_content, book_ip, book_type)
		values(#{mem_id}, #{mem_nick}, #{book_title}, NOW(), #{book_group}, #{book_step}, #{book_indent}, #{book_content}, #{book_ip}, #{book_type})
	</insert>
	
	<!-- 글 갯수 -->
	<select id="selectCount" resultType="int">
		select count(*) from book_board
	</select>
	
	<!-- 각 카테고리 글 갯수 -->
	<select id="selectCountCategory" resultType="int">
		select count(*) from book_board where book_type=#{book_type}
	</select>
	
	<!-- 리스트 -->
	<select id="selectList" parameterType="java.util.HashMap" resultType="model.book.Book_boardDto">
		select * from book_board 
		order by book_group desc, book_step asc
		limit #{start},#{cnt}
	</select>
	
	<!-- 각 카테고리 글 리스트 -->
	<select id="selectListCategory" parameterType="java.util.HashMap" resultType="model.book.Book_boardDto">
		select * from book_board 
		where book_type=#{book_type} 
		order by book_group desc, book_step asc
		limit #{start},#{cnt}
	</select>
	
	<!-- 조횟수 -->
	<update id="readCount" parameterType="int">
		update book_board set book_readcount=book_readcount+1 
		where book_no=#{book_no}
	</update>
	
	<!-- 글내용보기, 글수정 -->
	<select id="contentBoard" parameterType="int" resultType="model.book.Book_boardDto">
		select * from book_board 
		where book_no=#{book_no}
	</select>
	
	<!-- DB글수정 -->
	<update id="updateBoard" parameterType="model.book.Book_boardDto">
		update book_board set
		book_title=#{book_title},
		book_content=#{book_content}
		where book_no=#{book_no}
	</update>
	
	<!-- 글 삭제 -->
	<delete id="deleteBoard" parameterType="int">
		delete from book_board where book_no=#{book_no} 
	</delete>
	
	<!-- 좋아요테이블에 좋아요 레코드 추가 -->
	<insert id="insertLike" parameterType="java.util.HashMap">
		insert into book_likes(mem_id, book_no, book_likeState) 
		values(#{mem_id},#{book_no},#{book_likeState})
	</insert>
	
	<!-- 게시판에 like 업데이트 -->
	<update id="likeUpdateBoard" parameterType="int">
		update book_board
		set book_like=book_like+#{book_likeState}
		where book_no=#{book_no}
	</update>
	
	<!-- likeCnt 업데이트 -->
	<update id="likeCntUpdate" parameterType="String">
		update book_board
		set book_like_cnt=book_like_cnt+1
		where book_no=#{book_no}
	</update>
	
	<!-- dislikeCnt 업데이트 -->
	<update id="dislikeCntUpdate" parameterType="String">
		update book_board
		set book_dislike_cnt=book_dislike_cnt+1
		where book_no=#{book_no}
	</update>
	
	<!-- 좋아요 갯수 -->
	<select id="likeSelect" parameterType="int" resultType="model.book.Book_boardDto">
		select book_like, book_like_cnt, book_dislike_cnt
		from book_board
		where book_no=#{book_no}
	</select>
	
	<!-- 해당 게시물에 대한 좋아요 상태 -->
	<select id="likeStateCheck" parameterType="map" resultType="String">
		select book_likeState
		from book_likes
		where mem_id=#{mem_id} and book_no=#{book_no}
	</select>
		
</mapper>